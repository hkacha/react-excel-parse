{"ast":null,"code":"var _jsxFileName = \"/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/context/FilterContext.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, createContext } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport XLFile from \"../data/data.xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FilterContext = /*#__PURE__*/createContext();\n\n// import XLFile from \"../data/data.xlsx\";\n\nconst FilterProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [result, setResult] = useState([]);\n  const [filterList, setFilterList] = useState({\n    partName: [],\n    psbBuild: [],\n    sectionName: [],\n    firstName: [],\n    lastName: [],\n    gender: [],\n    age: {\n      min: 0,\n      max: 0\n    },\n    pincode: []\n  });\n  const [selectedFilter, setSelectedFilter] = useState({\n    partName: [],\n    psbBuild: [],\n    sectionName: [],\n    firstName: [],\n    lastName: [],\n    gender: [],\n    age: {\n      min: 0,\n      max: 0\n    },\n    pincode: []\n  });\n  const handleSetFilter = () => {\n    return;\n  };\n  const handleCreateFilter = e => {\n    console.log(e.target.checked);\n    console.log(e.target.name);\n    console.log(e.target.value);\n    let fieldName = e.target.name;\n    if (e.target.checked) {\n      setSelectedFilter({\n        ...selectedFilter,\n        [fieldName]: [...selectedFilter[fieldName], e.target.value]\n      });\n    } else {\n      let aa = selectedFilter[fieldName].filter(item => {\n        return item !== e.target.value;\n      });\n      setSelectedFilter({\n        ...selectedFilter,\n        [e.target.name]: aa\n      });\n    }\n  };\n  const getData = async () => {\n    const file = await (await fetch(XLFile)).arrayBuffer();\n    const wb = read(file);\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = utils.sheet_to_json(ws);\n    setResult(data);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FilterContext.Provider, {\n    value: {\n      result,\n      filterList,\n      selectedFilter,\n      handleSetFilter,\n      handleCreateFilter\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n_s(FilterProvider, \"4qeKHtuD5EiC+p4trGPC8Ro4UgQ=\");\n_c = FilterProvider;\nexport default FilterProvider;\nvar _c;\n$RefreshReg$(_c, \"FilterProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","read","utils","XLFile","FilterContext","FilterProvider","children","result","setResult","filterList","setFilterList","partName","psbBuild","sectionName","firstName","lastName","gender","age","min","max","pincode","selectedFilter","setSelectedFilter","handleSetFilter","handleCreateFilter","e","console","log","target","checked","name","value","fieldName","aa","filter","item","getData","file","fetch","arrayBuffer","wb","ws","Sheets","SheetNames","data","sheet_to_json"],"sources":["/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/context/FilterContext.js"],"sourcesContent":["import { useState, useEffect, createContext } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport XLFile from \"../data/data.xlsx\";\n\nexport const FilterContext = createContext();\n\n// import XLFile from \"../data/data.xlsx\";\n\nconst FilterProvider = ({ children }) => {\n\tconst [result, setResult] = useState([]);\n\tconst [filterList, setFilterList] = useState({\n\t\tpartName: [],\n\t\tpsbBuild: [],\n\t\tsectionName: [],\n\t\tfirstName: [],\n\t\tlastName: [],\n\t\tgender: [],\n\t\tage: { min: 0, max: 0 },\n\t\tpincode: [],\n\t});\n\n\tconst [selectedFilter, setSelectedFilter] = useState({\n\t\tpartName: [],\n\t\tpsbBuild: [],\n\t\tsectionName: [],\n\t\tfirstName: [],\n\t\tlastName: [],\n\t\tgender: [],\n\t\tage: { min: 0, max: 0 },\n\t\tpincode: [],\n\t});\n\n\tconst handleSetFilter = () => {\n\t\treturn;\n\t};\n\n\tconst handleCreateFilter = (e) => {\n\t\tconsole.log(e.target.checked);\n\t\tconsole.log(e.target.name);\n\t\tconsole.log(e.target.value);\n\n\t\tlet fieldName = e.target.name;\n\t\tif (e.target.checked) {\n\t\t\tsetSelectedFilter({\n\t\t\t\t...selectedFilter,\n\t\t\t\t[fieldName]: [...selectedFilter[fieldName], e.target.value],\n\t\t\t});\n\t\t} else {\n\t\t\tlet aa = selectedFilter[fieldName].filter((item) => {\n\t\t\t\treturn item !== e.target.value;\n\t\t\t});\n\t\t\tsetSelectedFilter({\n\t\t\t\t...selectedFilter,\n\t\t\t\t[e.target.name]: aa,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst getData = async () => {\n\t\tconst file = await (await fetch(XLFile)).arrayBuffer();\n\t\tconst wb = read(file);\n\t\tconst ws = wb.Sheets[wb.SheetNames[0]];\n\t\tconst data = utils.sheet_to_json(ws);\n\t\tsetResult(data);\n\t};\n\n\tuseEffect(() => {\n\t\tgetData();\n\t}, []);\n\n\treturn (\n\t\t<FilterContext.Provider\n\t\t\tvalue={{\n\t\t\t\tresult,\n\t\t\t\tfilterList,\n\t\t\t\tselectedFilter,\n\t\t\t\thandleSetFilter,\n\t\t\t\thandleCreateFilter,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</FilterContext.Provider>\n\t);\n};\n\nexport default FilterProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}