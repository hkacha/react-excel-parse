{"ast":null,"code":"var _jsxFileName = \"/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/UserTable.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useTransition, useContext } from \"react\";\nimport { Grid, Table, TableHead, TableRow, TableCell, TableBody, Container } from \"@mui/material\";\nimport UserRows from \"../components/UserRows\";\nimport { HEADERS } from \"../utils/constants\";\nimport { FilterContext } from \"../context/FilterContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = () => {\n  _s();\n  const {\n    result,\n    isFiltered\n  } = useContext(FilterContext);\n  const rows = [];\n  let newData = [];\n\n  // if (filters > 0) {\n  // \tconst filterKeys = Object.keys(selectedFilters);\n  // \t// selectedFilters all elements passing the criteria\n  // \tlet newUsers = users.filter((item) => {\n  // \t\t// dynamically validate all filter criteria\n  // \t\treturn filterKeys.every((key) => {\n  // \t\t\t// ignores an empty filter\n  // \t\t\tif (!selectedFilters[key].length) return true;\n  // \t\t\treturn selectedFilters[key].includes(item[key]);\n  // \t\t});\n  // \t});\n\n  // \tnewUsers.forEach((user, index) => {\n  // \t\trows.push(<UserRows user={user} key={index} />);\n  // \t});\n  // \tnewData = newUsers;\n  // } else {\n  result.forEach((user, index) => {\n    rows.push( /*#__PURE__*/_jsxDEV(UserRows, {\n      user: user\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this));\n  });\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              colSpan: 2,\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              colSpan: 3,\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                top: 57,\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === \"number\" ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 13\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 10\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n_s(UserTable, \"J+XitIIEoNvgD0W2g6lIFH29nFk=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["useState","useEffect","useTransition","useContext","Grid","Table","TableHead","TableRow","TableCell","TableBody","Container","UserRows","HEADERS","FilterContext","UserTable","result","isFiltered","rows","newData","forEach","user","index","push","width","maxHeight","columns","map","column","align","top","minWidth","label","id","slice","page","rowsPerPage","row","value","format","code","length","handleChangePage","handleChangeRowsPerPage"],"sources":["/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/UserTable.js"],"sourcesContent":["import { useState, useEffect, useTransition, useContext } from \"react\";\nimport {\n\tGrid,\n\tTable,\n\tTableHead,\n\tTableRow,\n\tTableCell,\n\tTableBody,\n\tContainer,\n} from \"@mui/material\";\n\nimport UserRows from \"../components/UserRows\";\nimport { HEADERS } from \"../utils/constants\";\nimport { FilterContext } from \"../context/FilterContext\";\n\nconst UserTable = () => {\n\tconst { result, isFiltered } = useContext(FilterContext);\n\n\tconst rows = [];\n\tlet newData = [];\n\n\t// if (filters > 0) {\n\t// \tconst filterKeys = Object.keys(selectedFilters);\n\t// \t// selectedFilters all elements passing the criteria\n\t// \tlet newUsers = users.filter((item) => {\n\t// \t\t// dynamically validate all filter criteria\n\t// \t\treturn filterKeys.every((key) => {\n\t// \t\t\t// ignores an empty filter\n\t// \t\t\tif (!selectedFilters[key].length) return true;\n\t// \t\t\treturn selectedFilters[key].includes(item[key]);\n\t// \t\t});\n\t// \t});\n\n\t// \tnewUsers.forEach((user, index) => {\n\t// \t\trows.push(<UserRows user={user} key={index} />);\n\t// \t});\n\t// \tnewData = newUsers;\n\t// } else {\n\tresult.forEach((user, index) => {\n\t\trows.push(<UserRows user={user} key={index} />);\n\t});\n\t// }\n\n\treturn (\n\t\t<Paper sx={{ width: \"100%\" }}>\n\t\t\t<TableContainer sx={{ maxHeight: 440 }}>\n\t\t\t\t<Table stickyHeader aria-label=\"sticky table\">\n\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t<TableCell align=\"center\" colSpan={2}>\n\t\t\t\t\t\t\t\tCountry\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t<TableCell align=\"center\" colSpan={3}>\n\t\t\t\t\t\t\t\tDetails\n\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t{columns.map((column) => (\n\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\tkey={column.id}\n\t\t\t\t\t\t\t\t\talign={column.align}\n\t\t\t\t\t\t\t\t\tstyle={{ top: 57, minWidth: column.minWidth }}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{column.label}\n\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t</TableHead>\n\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t{rows\n\t\t\t\t\t\t\t.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n\t\t\t\t\t\t\t.map((row) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n\t\t\t\t\t\t\t\t\t\t{columns.map((column) => {\n\t\t\t\t\t\t\t\t\t\t\tconst value = row[column.id];\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<TableCell key={column.id} align={column.align}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{column.format && typeof value === \"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? column.format(value)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: value}\n\t\t\t\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t\t<TablePagination\n\t\t\t\trowsPerPageOptions={[10, 25, 100]}\n\t\t\t\tcomponent=\"div\"\n\t\t\t\tcount={rows.length}\n\t\t\t\trowsPerPage={rowsPerPage}\n\t\t\t\tpage={page}\n\t\t\t\tonPageChange={handleChangePage}\n\t\t\t\tonRowsPerPageChange={handleChangeRowsPerPage}\n\t\t\t/>\n\t\t</Paper>\n\t);\n};\n\nexport default UserTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}