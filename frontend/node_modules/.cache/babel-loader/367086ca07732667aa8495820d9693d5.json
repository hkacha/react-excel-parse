{"ast":null,"code":"var _jsxFileName = \"/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/ExlReader.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport XLFile from \"../data/data.xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExlReader = () => {\n  _s();\n  const [result, setResult] = useState([]);\n  const getData = async () => {\n    const file = await (await fetch(XLFile)).arrayBuffer();\n    const wb = read(file);\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = utils.sheet_to_json(ws);\n    console.log(data);\n    setResult(data);\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DAta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n};\n_s(ExlReader, \"HaEOteC6yG5HMVXXpmZ2rXfh/XA=\");\n_c = ExlReader;\nexport default ExlReader;\nvar _c;\n$RefreshReg$(_c, \"ExlReader\");","map":{"version":3,"names":["useState","useEffect","read","utils","XLFile","ExlReader","result","setResult","getData","file","fetch","arrayBuffer","wb","ws","Sheets","SheetNames","data","sheet_to_json","console","log"],"sources":["/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/ExlReader.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { read, utils } from \"xlsx\";\n\nimport XLFile from \"../data/data.xlsx\";\n\nconst ExlReader = () => {\n\tconst [result, setResult] = useState([]);\n\n\tconst getData = async () => {\n\t\tconst file = await (await fetch(XLFile)).arrayBuffer();\n\t\tconst wb = read(file);\n\t\tconst ws = wb.Sheets[wb.SheetNames[0]];\n\t\tconst data = utils.sheet_to_json(ws);\n\t\tconsole.log(data);\n\t\tsetResult(data);\n\t};\n\n\tuseEffect(() => {\n\t\tgetData();\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>DAta</h1>\n\t\t</div>\n\t);\n};\n\nexport default ExlReader;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAElC,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMQ,OAAO,GAAG,YAAY;IAC3B,MAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACN,MAAM,CAAC,EAAEO,WAAW,EAAE;IACtD,MAAMC,EAAE,GAAGV,IAAI,CAACO,IAAI,CAAC;IACrB,MAAMI,EAAE,GAAGD,EAAE,CAACE,MAAM,CAACF,EAAE,CAACG,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,MAAMC,IAAI,GAAGb,KAAK,CAACc,aAAa,CAACJ,EAAE,CAAC;IACpCK,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBT,SAAS,CAACS,IAAI,CAAC;EAChB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACfO,OAAO,EAAE;EACV,CAAC,EAAE,EAAE,CAAC;EAEN,oBACC;IAAA,uBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAa;IAAA;IAAA;IAAA;EAAA,QACR;AAER,CAAC;AAAC,GArBIH,SAAS;AAAA,KAATA,SAAS;AAuBf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}