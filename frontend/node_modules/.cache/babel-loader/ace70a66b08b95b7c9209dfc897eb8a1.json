{"ast":null,"code":"import XLSX from \"xlsx\";\nexport const ALLOW_EXTENTIONS = [\"xlsx\", \"xls\", \"csv\", \"ods\"].map(item => {\n  return `.${item}`;\n}).join(\",\");\nexport const MAKE_CALLS = refstr => {\n  let o = [],\n    C = XLSX.utils.decode_range(refstr).e.c + 1;\n  for (var i = 0; i < C; ++i) o[i] = {\n    name: XLSX.utils.encode_col(i),\n    key: i\n  };\n  return o;\n};\n_c = MAKE_CALLS;\nvar _c;\n$RefreshReg$(_c, \"MAKE_CALLS\");","map":{"version":3,"names":["XLSX","ALLOW_EXTENTIONS","map","item","join","MAKE_CALLS","refstr","o","C","utils","decode_range","e","c","i","name","encode_col","key"],"sources":["/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/utils/constants.js"],"sourcesContent":["import XLSX from \"xlsx\";\n\nexport const ALLOW_EXTENTIONS = [\"xlsx\", \"xls\", \"csv\", \"ods\"]\n\t.map((item) => {\n\t\treturn `.${item}`;\n\t})\n\t.join(\",\");\n\nexport const MAKE_CALLS = (refstr) => {\n\tlet o = [],\n\t\tC = XLSX.utils.decode_range(refstr).e.c + 1;\n\tfor (var i = 0; i < C; ++i) o[i] = { name: XLSX.utils.encode_col(i), key: i };\n\treturn o;\n};\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,OAAO,MAAMC,gBAAgB,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAC3DC,GAAG,CAAEC,IAAI,IAAK;EACd,OAAQ,IAAGA,IAAK,EAAC;AAClB,CAAC,CAAC,CACDC,IAAI,CAAC,GAAG,CAAC;AAEX,OAAO,MAAMC,UAAU,GAAIC,MAAM,IAAK;EACrC,IAAIC,CAAC,GAAG,EAAE;IACTC,CAAC,GAAGR,IAAI,CAACS,KAAK,CAACC,YAAY,CAACJ,MAAM,CAAC,CAACK,CAAC,CAACC,CAAC,GAAG,CAAC;EAC5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,CAAC,EAAE,EAAEK,CAAC,EAAEN,CAAC,CAACM,CAAC,CAAC,GAAG;IAAEC,IAAI,EAAEd,IAAI,CAACS,KAAK,CAACM,UAAU,CAACF,CAAC,CAAC;IAAEG,GAAG,EAAEH;EAAE,CAAC;EAC7E,OAAON,CAAC;AACT,CAAC;AAAC,KALWF,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module"}