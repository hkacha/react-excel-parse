{"ast":null,"code":"var _jsxFileName = \"/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/ExlReader.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { read, utils, writeFileXLSX } from \"xlsx\";\nimport { ALLOW_EXTENTIONS, MAKE_CALLS } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExlReader = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  const handleFile = () => {\n    const reader = new FileReader();\n    const rABS = !!reader.readAsBinaryString;\n    reader.onload = e => {\n      /* Parse data */\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: rABS ? \"binary\" : \"array\",\n        bookVBA: true\n      });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const newData = XLSX.utils.sheet_to_json(ws);\n      /* Update state */\n      setData(newData);\n      setCols(MAKE_CALLS(ws[\"!ref\"]));\n      console.log(JSON.stringify(data, null, 2));\n    };\n    if (rABS) {\n      reader.readAsBinaryString(file);\n    } else {\n      reader.readAsArrayBuffer(file);\n    }\n  };\n  const handleChange = e => {\n    const fileName = e.target.files;\n    fileName && fileName[0] && setFile(fileName[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"file\",\n        id: \"file\",\n        accept: ALLOW_EXTENTIONS,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Process Triggers\",\n        onClick: handleFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n};\n_s(ExlReader, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ExlReader;\nexport default ExlReader;\nvar _c;\n$RefreshReg$(_c, \"ExlReader\");","map":{"version":3,"names":["useState","useEffect","useCallback","read","utils","writeFileXLSX","ALLOW_EXTENTIONS","MAKE_CALLS","ExlReader","data","setData","effect","cleanup","input","handleFile","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","type","bookVBA","wsname","SheetNames","ws","Sheets","newData","sheet_to_json","setCols","console","log","JSON","stringify","file","readAsArrayBuffer","handleChange","fileName","files","setFile"],"sources":["/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/ExlReader.js"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport { read, utils, writeFileXLSX } from \"xlsx\";\n\nimport { ALLOW_EXTENTIONS, MAKE_CALLS } from \"../utils/constants\";\n\nconst ExlReader = () => {\n\tconst [data, setData] = useState([]);\n\n\tuseEffect(async () => {\n\t\teffect;\n\t\treturn () => {\n\t\t\tcleanup;\n\t\t};\n\t}, [input]);\n\n\tconst handleFile = () => {\n\t\tconst reader = new FileReader();\n\t\tconst rABS = !!reader.readAsBinaryString;\n\n\t\treader.onload = (e) => {\n\t\t\t/* Parse data */\n\t\t\tconst bstr = e.target.result;\n\t\t\tconst wb = XLSX.read(bstr, {\n\t\t\t\ttype: rABS ? \"binary\" : \"array\",\n\t\t\t\tbookVBA: true,\n\t\t\t});\n\t\t\t/* Get first worksheet */\n\t\t\tconst wsname = wb.SheetNames[0];\n\t\t\tconst ws = wb.Sheets[wsname];\n\t\t\t/* Convert array of arrays */\n\t\t\tconst newData = XLSX.utils.sheet_to_json(ws);\n\t\t\t/* Update state */\n\t\t\tsetData(newData);\n\t\t\tsetCols(MAKE_CALLS(ws[\"!ref\"]));\n\t\t\tconsole.log(JSON.stringify(data, null, 2));\n\t\t};\n\n\t\tif (rABS) {\n\t\t\treader.readAsBinaryString(file);\n\t\t} else {\n\t\t\treader.readAsArrayBuffer(file);\n\t\t}\n\t};\n\n\tconst handleChange = (e) => {\n\t\tconst fileName = e.target.files;\n\t\tfileName && fileName[0] && setFile(fileName[0]);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"file\"\n\t\t\t\t\tname=\"file\"\n\t\t\t\t\tid=\"file\"\n\t\t\t\t\taccept={ALLOW_EXTENTIONS}\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t/>\n\t\t\t\t<input type=\"submit\" value=\"Process Triggers\" onClick={handleFile} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ExlReader;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,IAAI,EAAEC,KAAK,EAAEC,aAAa,QAAQ,MAAM;AAEjD,SAASC,gBAAgB,EAAEC,UAAU,QAAQ,oBAAoB;AAAC;AAElE,MAAMC,SAAS,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEpCC,SAAS,CAAC,YAAY;IACrBU,MAAM;IACN,OAAO,MAAM;MACZC,OAAO;IACR,CAAC;EACF,CAAC,EAAE,CAACC,KAAK,CAAC,CAAC;EAEX,MAAMC,UAAU,GAAG,MAAM;IACxB,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/B,MAAMC,IAAI,GAAG,CAAC,CAACF,MAAM,CAACG,kBAAkB;IAExCH,MAAM,CAACI,MAAM,GAAIC,CAAC,IAAK;MACtB;MACA,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,MAAM;MAC5B,MAAMC,EAAE,GAAGC,IAAI,CAACtB,IAAI,CAACkB,IAAI,EAAE;QAC1BK,IAAI,EAAET,IAAI,GAAG,QAAQ,GAAG,OAAO;QAC/BU,OAAO,EAAE;MACV,CAAC,CAAC;MACF;MACA,MAAMC,MAAM,GAAGJ,EAAE,CAACK,UAAU,CAAC,CAAC,CAAC;MAC/B,MAAMC,EAAE,GAAGN,EAAE,CAACO,MAAM,CAACH,MAAM,CAAC;MAC5B;MACA,MAAMI,OAAO,GAAGP,IAAI,CAACrB,KAAK,CAAC6B,aAAa,CAACH,EAAE,CAAC;MAC5C;MACApB,OAAO,CAACsB,OAAO,CAAC;MAChBE,OAAO,CAAC3B,UAAU,CAACuB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;MAC/BK,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC7B,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,IAAIQ,IAAI,EAAE;MACTF,MAAM,CAACG,kBAAkB,CAACqB,IAAI,CAAC;IAChC,CAAC,MAAM;MACNxB,MAAM,CAACyB,iBAAiB,CAACD,IAAI,CAAC;IAC/B;EACD,CAAC;EAED,MAAME,YAAY,GAAIrB,CAAC,IAAK;IAC3B,MAAMsB,QAAQ,GAAGtB,CAAC,CAACE,MAAM,CAACqB,KAAK;IAC/BD,QAAQ,IAAIA,QAAQ,CAAC,CAAC,CAAC,IAAIE,OAAO,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,oBACC;IAAA,uBACC;MAAK,SAAS,EAAC,EAAE;MAAA,wBAChB;QACC,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,MAAM,EAAEpC,gBAAiB;QACzB,QAAQ,EAAEmC;MAAa;QAAA;QAAA;QAAA;MAAA,QACtB,eACF;QAAO,IAAI,EAAC,QAAQ;QAAC,KAAK,EAAC,kBAAkB;QAAC,OAAO,EAAE3B;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAChE;IAAA;IAAA;IAAA;EAAA,QACD;AAER,CAAC;AAAC,GA1DIN,SAAS;AAAA,KAATA,SAAS;AA4Df,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}