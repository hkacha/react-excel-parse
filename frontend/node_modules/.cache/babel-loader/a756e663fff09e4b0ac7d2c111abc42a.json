{"ast":null,"code":"var _jsxFileName = \"/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/ExlReader.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useTransition } from \"react\";\nimport { read, utils } from \"xlsx\";\nimport { HEADERS } from \"../utils/constants\";\n\n// import XLFile from \"../data/77-Jamnagar-Rural -Data.xlsx\";\nimport XLFile from \"../data/data.xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExlReader = () => {\n  _s();\n  const [result, setResult] = useState([]);\n  const [isPending, startTransition] = useTransition();\n  const getData = async () => {\n    const file = await (await fetch(XLFile)).arrayBuffer();\n    const wb = read(file);\n    const ws = wb.Sheets[wb.SheetNames[0]];\n    const data = utils.sheet_to_json(ws);\n    console.log(data);\n    setResult(data);\n  };\n  useEffect(() => {\n    startTransition(() => {\n      getData();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DAta \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: HEADERS && HEADERS.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              children: item\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 16\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), isPending ? \" Loading...\" : null, result && result.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 8\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n_s(ExlReader, \"UcGGBxbgGONMT4kBjlbhA4xUtG0=\", false, function () {\n  return [useTransition];\n});\n_c = ExlReader;\nexport default ExlReader;\nvar _c;\n$RefreshReg$(_c, \"ExlReader\");","map":{"version":3,"names":["useState","useEffect","useTransition","read","utils","HEADERS","XLFile","ExlReader","result","setResult","isPending","startTransition","getData","file","fetch","arrayBuffer","wb","ws","Sheets","SheetNames","data","sheet_to_json","console","log","map","item","index"],"sources":["/home/hardik/Code/nilkanthsolutions/react-excel-parse/frontend/src/container/ExlReader.js"],"sourcesContent":["import { useState, useEffect, useTransition } from \"react\";\nimport { read, utils } from \"xlsx\";\n\nimport { HEADERS } from \"../utils/constants\";\n\n// import XLFile from \"../data/77-Jamnagar-Rural -Data.xlsx\";\nimport XLFile from \"../data/data.xlsx\";\n\nconst ExlReader = () => {\n\tconst [result, setResult] = useState([]);\n\tconst [isPending, startTransition] = useTransition();\n\n\tconst getData = async () => {\n\t\tconst file = await (await fetch(XLFile)).arrayBuffer();\n\t\tconst wb = read(file);\n\t\tconst ws = wb.Sheets[wb.SheetNames[0]];\n\t\tconst data = utils.sheet_to_json(ws);\n\t\tconsole.log(data);\n\t\tsetResult(data);\n\t};\n\n\tuseEffect(() => {\n\t\tstartTransition(() => {\n\t\t\tgetData();\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>DAta </h1>\n\t\t\t<table className=\"table\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t{HEADERS &&\n\t\t\t\t\t\t\tHEADERS.map((item, index) => {\n\t\t\t\t\t\t\t\treturn <th key={index}>{item}</th>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t</table>\n\t\t\t{isPending ? \" Loading...\" : null}\n\t\t\t{result &&\n\t\t\t\tresult.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={index}>\n\t\t\t\t\t\t\t<td>{item}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t</div>\n\t);\n};\n\nexport default ExlReader;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,OAAO;AAC1D,SAASC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAElC,SAASC,OAAO,QAAQ,oBAAoB;;AAE5C;AACA,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,MAAMC,SAAS,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,eAAe,CAAC,GAAGT,aAAa,EAAE;EAEpD,MAAMU,OAAO,GAAG,YAAY;IAC3B,MAAMC,IAAI,GAAG,MAAM,CAAC,MAAMC,KAAK,CAACR,MAAM,CAAC,EAAES,WAAW,EAAE;IACtD,MAAMC,EAAE,GAAGb,IAAI,CAACU,IAAI,CAAC;IACrB,MAAMI,EAAE,GAAGD,EAAE,CAACE,MAAM,CAACF,EAAE,CAACG,UAAU,CAAC,CAAC,CAAC,CAAC;IACtC,MAAMC,IAAI,GAAGhB,KAAK,CAACiB,aAAa,CAACJ,EAAE,CAAC;IACpCK,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBX,SAAS,CAACW,IAAI,CAAC;EAChB,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACfU,eAAe,CAAC,MAAM;MACrBC,OAAO,EAAE;IACV,CAAC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACC;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAO,SAAS,EAAC,OAAO;MAAA,uBACvB;QAAA,uBACC;UAAA,UACEP,OAAO,IACPA,OAAO,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;YAC5B,oBAAO;cAAA,UAAiBD;YAAI,GAAZC,KAAK;cAAA;cAAA;cAAA;YAAA,QAAa;UACnC,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA;MACC;QAAA;QAAA;QAAA;MAAA;IACE;MAAA;MAAA;MAAA;IAAA,QACD,EACPhB,SAAS,GAAG,aAAa,GAAG,IAAI,EAChCF,MAAM,IACNA,MAAM,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC3B,oBACC;QAAA,uBACC;UAAA,UAAKD;QAAI;UAAA;UAAA;UAAA;QAAA;MAAM,GADPC,KAAK;QAAA;QAAA;QAAA;MAAA,QAET;IAEP,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACE;AAER,CAAC;AAAC,GA3CInB,SAAS;EAAA,QAEuBL,aAAa;AAAA;AAAA,KAF7CK,SAAS;AA6Cf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}