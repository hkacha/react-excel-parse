{"version":3,"file":"window-table.cjs.production.min.js","sources":["../src/AutoSizer/index.tsx","../src/AutoSizer/detectElementResize.ts","../src/Measurer.tsx","../src/helpers/areTablePropsEqual.ts","../src/WindowTable.tsx","../src/Html5Table.tsx","../src/filters.tsx"],"sourcesContent":["import * as React from 'react';\n// @ts-ignore\nimport createDetectElementResize from './detectElementResize';\n\ntype Size = {\n  height: number;\n  width: number;\n};\n\ntype Props = {\n  onResize: (Size: Size) => void;\n  innerElementType: any;\n};\n\ntype State = {\n  height: number;\n  width: number;\n};\n\ntype ResizeHandler = (element?: HTMLElement, onResize?: () => void) => void;\n\ntype DetectElementResize = {\n  addResizeListener: ResizeHandler;\n  removeResizeListener: ResizeHandler;\n};\n\nexport default class AutoSizer extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    onResize: () => {},\n  };\n\n  state = {\n    height: 0,\n    width: 0,\n  };\n\n  _parentNode?: HTMLElement;\n  _autoSizer?: HTMLElement | any;\n  // @ts-ignore\n  _detectElementResize: DetectElementResize;\n\n  componentDidMount() {\n    if (\n      this._autoSizer &&\n      this._autoSizer.parentNode &&\n      this._autoSizer.parentNode.ownerDocument &&\n      this._autoSizer.parentNode.ownerDocument.defaultView &&\n      this._autoSizer.parentNode instanceof\n        this._autoSizer.parentNode.ownerDocument.defaultView.HTMLElement\n    ) {\n      // Delay access of parentNode until mount.\n      // This handles edge-cases where the component has already been unmounted before its ref has been set,\n      // As well as libraries like react-lite which have a slightly different lifecycle.\n      this._parentNode = this._autoSizer.parentNode;\n\n      // Defer requiring resize handler in order to support server-side rendering.\n      // See issue #41\n      this._detectElementResize = createDetectElementResize('');\n      this._detectElementResize.addResizeListener(\n        this._parentNode,\n        this._onResize\n      );\n\n      this._onResize();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._detectElementResize && this._parentNode) {\n      this._detectElementResize.removeResizeListener(\n        this._parentNode,\n        this._onResize\n      );\n    }\n  }\n\n  render() {\n    // Outer div should not force width/height since that may prevent containers from shrinking.\n    // Inner component should overflow and use calculated width/height.\n    // See issue #68 for more information.\n    const outerStyle: any = { overflow: 'visible' };\n\n    outerStyle.height = 0;\n    outerStyle.width = 0;\n\n    const Component = this.props.innerElementType || 'div';\n\n    return <Component ref={this._setRef as any} style={outerStyle} />;\n  }\n\n  _onResize = () => {\n    const { onResize } = this.props;\n\n    if (this._parentNode) {\n      // Guard against AutoSizer component being removed from the DOM immediately after being added.\n      // This can result in invalid style values which can result in NaN values if we don't handle them.\n      // See issue #150 for more context.\n\n      const height = this._parentNode.offsetHeight || 0;\n      const width = this._parentNode.offsetWidth || 0;\n\n      const style = (window.getComputedStyle(this._parentNode) || {}) as any;\n      const paddingLeft = parseInt(style.paddingLeft, 10) || 0;\n      const paddingRight = parseInt(style.paddingRight, 10) || 0;\n      const paddingTop = parseInt(style.paddingTop, 10) || 0;\n      const paddingBottom = parseInt(style.paddingBottom, 10) || 0;\n\n      const newHeight = height - paddingTop - paddingBottom;\n      const newWidth = width - paddingLeft - paddingRight;\n\n      if (this.state.height !== newHeight || this.state.width !== newWidth) {\n        this.setState({\n          height: height - paddingTop - paddingBottom,\n          width: width - paddingLeft - paddingRight,\n        });\n\n        onResize({ height, width });\n      }\n    }\n  };\n\n  _setRef = (autoSizer?: HTMLElement) => {\n    this._autoSizer = autoSizer;\n  };\n}\n","/**\n * Detect Element Resize.\n * https://github.com/sdecima/javascript-detect-element-resize\n * Sebastian Decima\n *\n * Forked from version 0.5.3; includes the following modifications:\n * 1) Guard against unsafe 'window' and 'document' references (to support SSR).\n * 2) Defer initialization code via a top-level function wrapper (to support SSR).\n * 3) Avoid unnecessary reflows by not measuring size for scroll events bubbling from children.\n * 4) Add nonce for style element.\n **/\n\nexport default function createDetectElementResize(nonce: any) {\n  // Check `document` and `window` in case of server-side rendering\n  const _window = typeof window !== 'undefined' ? window : global;\n\n  const requestFrame = (fn: any) =>\n    (\n      _window.requestAnimationFrame || ((fn: any) => _window.setTimeout(fn, 20))\n    )(fn);\n\n  const cancelFrame = (id: any) =>\n    (_window.cancelAnimationFrame || _window.clearTimeout)(id);\n\n  const resetTriggers = function(element: any) {\n    const triggers = element.__resizeTriggers__,\n      expand = triggers.firstElementChild,\n      contract = triggers.lastElementChild,\n      expandChild = expand.firstElementChild;\n    contract.scrollLeft = contract.scrollWidth;\n    contract.scrollTop = contract.scrollHeight;\n    expandChild.style.width = `${expand.offsetWidth + 1}px`;\n    expandChild.style.height = `${expand.offsetHeight + 1}px`;\n    expand.scrollLeft = expand.scrollWidth;\n    expand.scrollTop = expand.scrollHeight;\n  };\n\n  const checkTriggers = function(element: any) {\n    return (\n      element.offsetWidth !== element.__resizeLast__.width ||\n      element.offsetHeight !== element.__resizeLast__.height\n    );\n  };\n\n  const scrollListener = function(\n    this: HTMLElement & {\n      __resizeRAF__: number;\n      __resizeLast__: any;\n      __resizeListeners__: any[];\n    },\n    e: any\n  ) {\n    // Don't measure (which forces) reflow for scrolls that happen inside of children!\n    if (\n      e.target.className.indexOf('contract-trigger') < 0 &&\n      e.target.className.indexOf('expand-trigger') < 0\n    ) {\n      return;\n    }\n\n    resetTriggers(this);\n    if (this.__resizeRAF__) {\n      cancelFrame(this.__resizeRAF__);\n    }\n    this.__resizeRAF__ = requestFrame(() => {\n      if (checkTriggers(this)) {\n        this.__resizeLast__.width = this.offsetWidth;\n        this.__resizeLast__.height = this.offsetHeight;\n        this.__resizeListeners__.forEach((fn: any) => {\n          fn.call(this, e);\n        });\n      }\n    });\n  };\n\n  const createStyles = function(doc: any) {\n    if (!doc.getElementById('detectElementResize')) {\n      const css = `\n        .resize-triggers {\n          visibility: hidden;\n        }\n        .resize-triggers, .resize-triggers > div,\n        .contract-trigger:before {\n          content: \" \";\n          display: block;\n          position: absolute;\n          top: 0;\n          left: 0;\n          height: 100%;\n          width: 100%;\n          overflow:\n          hidden; z-index: -1;\n        }\n        .resize-triggers > div {\n          background: #eee;\n          overflow: auto;\n        }\n        .contract-trigger:before {\n          width: 200%;\n          height: 200%;\n        }\n        `,\n        head = doc.head || doc.getElementsByTagName('head')[0],\n        style = doc.createElement('style');\n\n      style.id = 'detectElementResize';\n      style.type = 'text/css';\n\n      if (nonce != null) {\n        style.setAttribute('nonce', nonce);\n      }\n\n      if (style.styleSheet) {\n        style.styleSheet.cssText = css;\n      } else {\n        style.appendChild(doc.createTextNode(css));\n      }\n\n      head.appendChild(style);\n    }\n  };\n\n  const addResizeListener = function(element: any, fn: any) {\n    if (!element.__resizeTriggers__) {\n      const doc = element.ownerDocument;\n      const elementStyle = _window.getComputedStyle(element);\n      if (elementStyle && elementStyle.position === 'static') {\n        element.style.position = 'relative';\n      }\n      createStyles(doc);\n      element.__resizeLast__ = {};\n      element.__resizeListeners__ = [];\n      (element.__resizeTriggers__ = doc.createElement('div')).className =\n        'resize-triggers';\n      element.__resizeTriggers__.innerHTML =\n        '<div class=\"expand-trigger\"><div></div></div>' +\n        '<div class=\"contract-trigger\"></div>';\n      element.appendChild(element.__resizeTriggers__);\n      resetTriggers(element);\n      element.addEventListener('scroll', scrollListener, true);\n    }\n    element.__resizeListeners__.push(fn);\n  };\n\n  const removeResizeListener = function(element: any, fn: any) {\n    element.__resizeListeners__.splice(\n      element.__resizeListeners__.indexOf(fn),\n      1\n    );\n    if (!element.__resizeListeners__.length) {\n      element.removeEventListener('scroll', scrollListener, true);\n      if (element.__resizeTriggers__.__animationListener__) {\n        element.__resizeTriggers__.__animationListener__ = null;\n      }\n      try {\n        element.__resizeTriggers__ = !element.removeChild(\n          element.__resizeTriggers__\n        );\n      } catch (e) {\n        // Preact compat; see developit/preact-compat/issues/228\n      }\n    }\n  };\n\n  return {\n    addResizeListener,\n    removeResizeListener,\n  };\n}\n","import * as React from 'react';\nimport debounce from 'lodash.debounce';\nimport AutoSizer from './AutoSizer';\nimport { MeasureAction, ReducerState, TableEntity } from './core/types';\n\nconst { useMemo, useReducer } = React;\n\n// Define the initial state of dimensions\n// Also to be used as a state which will not trigger a re-render on changes\n// So that we can change state from the useReducer, only when required\nlet cache: ReducerState = {\n  header: [0, 0],\n  row: [0, 0],\n  table: [0, 0],\n};\n\nexport const reducer: React.Reducer<ReducerState, MeasureAction> = (\n  state,\n  { entity, dimensions }\n) => {\n  if (entity) {\n    // Keep updates in cache\n    cache = { ...cache, [entity]: dimensions };\n    if (JSON.stringify(state[entity]) !== JSON.stringify(cache[entity])) {\n      return cache;\n    }\n  }\n  return state;\n};\n\nexport const Measurer: React.FunctionComponent<{\n  measure: React.Dispatch<MeasureAction>;\n  entity: TableEntity;\n  debounceWait: number;\n  innerElementType?: any;\n}> = ({ measure, entity, debounceWait, innerElementType = 'div' }) => {\n  const debounced = useMemo(\n    () => debounce(measure, debounceWait, { leading: true }),\n    [measure, debounceWait]\n  );\n  const dispatch = debounceWait > 0 ? debounced : measure;\n  return (\n    <AutoSizer\n      innerElementType={innerElementType}\n      onResize={({ height, width }: { height: number; width: number }) => {\n        dispatch({ dimensions: [height, width], entity });\n      }}\n    />\n  );\n};\n\nexport const useTableMeasurer = () => {\n  return useReducer(reducer, cache);\n};\n","const objectProps = ['style', 'sampleRow'];\nconst otherProps = [\n  'columns',\n  'data',\n  'rowHeight',\n  'height',\n  'width',\n  'className',\n  'rowClassName',\n  'classNamePrefix',\n];\n\nexport function areTablePropsEqual(prev: any, next: any) {\n  const areObjectPropsEqual = objectProps.every(propName => {\n    return JSON.stringify(prev[propName]) === JSON.stringify(next[propName]);\n  });\n  if (!areObjectPropsEqual) {\n    return false;\n  }\n  return otherProps.every(propName => prev[propName] === next[propName]);\n}\n","import * as React from 'react';\nimport ReactWindow, { VariableSizeList, areEqual } from 'react-window';\nimport { Measurer, useTableMeasurer } from './Measurer';\nimport {\n  Column,\n  WindowTableProps,\n  RowCellsProps,\n  HeaderRowProps,\n} from './core/types';\nimport { areTablePropsEqual } from './helpers/areTablePropsEqual';\nimport {\n  ReactElement,\n  useRef,\n  useContext,\n  createContext,\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\n\nconst TableContext = createContext({\n  columns: [] as Column<any, any>[],\n  data: [] as any[],\n  Cell: 'div' as React.ElementType,\n  Row: 'div' as React.ElementType,\n  Table: 'div' as React.ElementType,\n  Body: 'div' as React.ElementType,\n  classNamePrefix: '',\n  tableClassName: '',\n  rowClassName: '' as string | Function,\n  rowWidthOffset: 0,\n  setSize: (() => ({})) as any,\n  variableSizeRows: false as boolean,\n});\n\nconst RowCells = ({\n  columns,\n  classNamePrefix,\n  datum,\n  Cell,\n  index = 0,\n  setSize,\n}: RowCellsProps) => {\n  return (\n    <>\n      {columns.map((column, i) => {\n        const { key, width, Component = 'div' } = column;\n        // Using i as the key, because it doesn't matter much,\n        // as we are only looping through columns in one row only\n        const extraProps =\n          typeof Component === 'string'\n            ? {}\n            : {\n                row: datum,\n                column,\n                index,\n                setSize: setSize || (() => {}),\n              };\n        return (\n          <Cell\n            key={i}\n            style={{\n              width: `${width}px`,\n              flexGrow: width,\n              display: 'inline-block',\n              boxSizing: 'border-box',\n            }}\n            className={`${classNamePrefix}table-cell`}\n            row={datum}\n            column={column}\n            index={index}\n          >\n            <Component {...extraProps}>{datum[key]}</Component>\n          </Cell>\n        );\n      })}\n    </>\n  );\n};\n\nconst RowRenderer: React.FunctionComponent<ReactWindow.ListChildComponentProps> = ({\n  index,\n  style,\n}) => {\n  const {\n    columns,\n    data,\n    Cell,\n    classNamePrefix,\n    Row,\n    rowClassName,\n    setSize,\n    variableSizeRows,\n  } = useContext(TableContext);\n\n  const rowClassNameStr = useMemo(\n    () =>\n      typeof rowClassName === 'function' ? rowClassName(index) : rowClassName,\n    [index, rowClassName]\n  );\n\n  const setSizeRef = useRef(setSize);\n  const setSizeCb = useCallback(() => {\n    if (!variableSizeRows && index !== 0) {\n      return;\n    }\n    const el = document.querySelector(`#window-table-row-ref-${index}`);\n    if (!el) {\n      return;\n    }\n\n    if (el.scrollHeight > el.getBoundingClientRect().height) {\n      setSizeRef.current(index, el?.scrollHeight + 1 || 0);\n    }\n  }, [index, variableSizeRows]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setSizeCb();\n    }, 0);\n  }, [index, style.height, setSizeCb]);\n\n  return (\n    <Row\n      id={`window-table-row-ref-${index}`}\n      style={{\n        ...style,\n        display: 'flex',\n        overflow: 'auto',\n      }}\n      className={`${classNamePrefix}${rowClassNameStr} ${classNamePrefix}${rowClassNameStr}-${index}`}\n      index={index}\n      row={data[index]}\n    >\n      <RowCells\n        datum={data[index]}\n        Cell={Cell}\n        classNamePrefix={classNamePrefix}\n        columns={columns}\n        index={index}\n        setSize={setSizeCb}\n      />\n    </Row>\n  );\n};\nconst MemoRowRenderer = memo(RowRenderer, areEqual);\n\nconst HeaderRowRenderer: React.FunctionComponent<HeaderRowProps> = ({\n  Header,\n  HeaderRow,\n  HeaderCell: DefaultHeaderCell,\n  children,\n}) => {\n  const { columns, classNamePrefix, rowWidthOffset } = useContext(TableContext);\n  const rowRef = useRef<HTMLElement>(null);\n\n  const color =\n    rowRef &&\n    rowRef.current &&\n    rowRef.current.firstChild &&\n    getComputedStyle(rowRef.current.firstChild as Element).backgroundColor;\n\n  return (\n    <Header\n      id=\"window-table-header-ref\"\n      className={`${classNamePrefix}table-header`}\n      style={{ backgroundColor: color }}\n    >\n      <HeaderRow\n        style={{\n          display: 'flex',\n          width: `calc(100% - ${rowWidthOffset}px)`,\n        }}\n        className={`${classNamePrefix}table-header-row`}\n        ref={rowRef}\n      >\n        {children}\n        {columns.map(column => {\n          const { key, width, title, HeaderCell = DefaultHeaderCell } = column;\n          return (\n            <HeaderCell\n              key={`header${key}`}\n              style={{\n                width: `${width}px`,\n                display: 'inline-block',\n                flexGrow: width,\n              }}\n              className={`${classNamePrefix}table-header-cell`}\n              column={column}\n            >\n              {title}\n            </HeaderCell>\n          );\n        })}\n      </HeaderRow>\n    </Header>\n  );\n};\n\nconst TableBodyRenderer: React.FunctionComponent = ({ children, ...props }) => {\n  const { Table, classNamePrefix, tableClassName, Body } = useContext(\n    TableContext\n  );\n\n  return (\n    <Table {...props} className={tableClassName}>\n      <Body className={`${classNamePrefix}table-body`}>{children}</Body>\n    </Table>\n  );\n};\n\nconst WindowTable = React.forwardRef(\n  <T extends any = any>(\n    {\n      columns,\n      data,\n      rowHeight = 40,\n      height,\n      width,\n      overscanCount = 1,\n      disableHeader = false,\n      style = {},\n      Cell = 'div',\n      HeaderCell = 'div',\n      Table = 'div',\n      Header = 'div',\n      HeaderRow = 'div',\n      Row = 'div',\n      Body = 'div',\n      className = '',\n      rowClassName = 'table-row',\n      classNamePrefix = '',\n      debounceWait = 0,\n      headerCellInnerElementType = 'div',\n      tableCellInnerElementType = 'div',\n      variableSizeRows = false,\n      tableOuterRef,\n      tableOuterElementType,\n      ...rest\n    }: WindowTableProps<T>,\n    ref: React.Ref<ReactWindow.VariableSizeList>\n  ) => {\n    const localRef = useRef<any>();\n    ref = ref || localRef;\n    const [headerHeight, setHeaderHeight] = useState(0);\n\n    const measurerRowRef = useRef<HTMLElement>(null);\n    const tableClassName = `${classNamePrefix}table ${className}`;\n\n    const columnWidthsSum = columns.reduce((sum, { width }) => sum + width, 0);\n\n    const [dimensions, measure] = useTableMeasurer();\n\n    const [tableHeight, tableWidth] = dimensions.table;\n\n    const bodyHeight: number = (height || tableHeight) - headerHeight;\n    const effectiveWidth = width || Math.max(columnWidthsSum, tableWidth);\n\n    const rowWidth =\n      (measurerRowRef.current && measurerRowRef.current.clientWidth) ||\n      tableWidth;\n    const rowWidthOffset = tableWidth - rowWidth;\n\n    const [sizeMap, setSizeMap] = useState({} as any);\n    const getItemSize = (index: number) => {\n      if (!variableSizeRows) {\n        return sizeMap[0] || rowHeight;\n      }\n      return sizeMap[index] || rowHeight;\n    };\n\n    const tblCtx = {\n      columns,\n      data,\n      Cell,\n      Row,\n      Table,\n      Body,\n      classNamePrefix,\n      tableClassName,\n      rowClassName,\n      rowWidthOffset,\n      variableSizeRows,\n      setSize: (index: any, height: any) => {\n        if (!height) {\n          return;\n        }\n        // console.log(sizeMap, index, height);\n        setSizeMap((map: any) => ({\n          ...map,\n          [index]: Math.max(height, map[index] || 0),\n        }));\n        (ref as any)?.current?.resetAfterIndex?.(index);\n      },\n    };\n\n    const first = sizeMap[0];\n    useEffect(() => {\n      setHeaderHeight(\n        document.querySelector('#window-table-header-ref')?.scrollHeight || 0\n      );\n    }, [first]);\n\n    return (\n      <div\n        style={{\n          height: height ? `${height}px` : '100%',\n          width: width ? `${width}px` : '100%',\n          overflow: 'auto',\n          maxHeight: '100vh', // By default, table height will be bounded by 100% of viewport height\n          minHeight: '200px', // By default, table will have a minimum height\n          ...style,\n        }}\n        {...rest}\n      >\n        <TableContext.Provider value={tblCtx}>\n          <div>\n            {!disableHeader && tableWidth > 0 && (\n              <Table\n                style={{ width: `${effectiveWidth}px`, marginBottom: 0 }}\n                className={tableClassName}\n              >\n                <HeaderRowRenderer\n                  Header={Header}\n                  HeaderRow={HeaderRow}\n                  HeaderCell={HeaderCell}\n                />\n              </Table>\n            )}\n            {!!data.length && (\n              <VariableSizeList\n                ref={ref}\n                height={bodyHeight}\n                itemCount={data.length}\n                itemSize={getItemSize}\n                width={effectiveWidth}\n                innerElementType={TableBodyRenderer}\n                overscanCount={overscanCount}\n                outerRef={tableOuterRef}\n                outerElementType={tableOuterElementType}\n              >\n                {MemoRowRenderer}\n              </VariableSizeList>\n            )}\n          </div>\n        </TableContext.Provider>\n\n        {(!height || !width) && (\n          /*Measure table dimensions only if explicit height or width are not supplied*/\n          <Measurer\n            measure={measure}\n            entity=\"table\"\n            debounceWait={debounceWait}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\ndeclare function WindowTableType<T>(\n  props: WindowTableProps<T>\n): ReactElement<T>;\n\nexport default (memo(\n  WindowTable,\n  areTablePropsEqual\n) as unknown) as typeof WindowTableType;\n","import * as React from 'react';\nimport WindowTable from './WindowTable';\nimport { Html5TableProps } from './core/types';\n\nconst getTHead = (headerClassName: string = '') => {\n  const THead: React.FunctionComponent<React.HTMLAttributes<\n    HTMLTableSectionElement\n  >> = props => {\n    return (\n      <thead {...props} className={`${headerClassName} ${props.className}`} />\n    );\n  };\n  return THead;\n};\n\nfunction Html5Table<T = any>({\n  headerClassName,\n  ...props\n}: Html5TableProps<T>) {\n  return (\n    <WindowTable<T>\n      Cell=\"td\"\n      HeaderCell=\"th\"\n      Header={getTHead(headerClassName)}\n      HeaderRow=\"tr\"\n      Row=\"tr\"\n      Body=\"tbody\"\n      Table=\"table\"\n      headerCellInnerElementType=\"th\"\n      tableCellInnerElementType=\"td\"\n      {...props}\n    />\n  );\n}\n\nexport default Html5Table;\n","import * as React from 'react';\nimport debounce from 'lodash.debounce';\n\nconst { useState, useMemo } = React;\n\n/**\n * A hook giving a combination of immediate and debounced state\n * @param initialState\n * @param wait\n */\nexport function useDebouncedState(\n  initialState: any,\n  wait: number = 100\n): [any, any, (state: any) => void] {\n  const [immediateState, setImmediateState] = useState(initialState);\n  const [debouncedState, setState] = useState(initialState);\n\n  const setDebouncedState = useMemo(() => debounce(setState, wait), [wait]);\n\n  const setCombinedState = (state: any) => {\n    setDebouncedState.cancel();\n    setImmediateState(state);\n    setDebouncedState(state);\n  };\n\n  return [immediateState, debouncedState, setCombinedState];\n}\n\ntype UseFilter = (\n  filterFn: (data: Array<Object>, filterText: string) => Array<Object>,\n  data: Array<Object>,\n  filterText: string\n) => Array<Object>;\n\n/**\n * A hook for fast data filtering\n * @param filterFn\n * @param data\n * @param filterText\n */\nexport const useFilter: UseFilter = function(filterFn, data, filterText) {\n  return useMemo(() => {\n    if (!filterText.length) {\n      return data;\n    }\n    return filterFn(data, filterText);\n  }, [data, filterFn, filterText]);\n};\n\n/**\n * A simple utility for creating functions for trivial data filtering\n * @param fields\n */\nexport function createFilter(fields: string[]) {\n  return (originalData: any, filterText: string) =>\n    originalData.filter((data: any) =>\n      fields.some((field: string) => {\n        const fieldData = data[field] ? String(data[field]) : '';\n        return !!(\n          filterText &&\n          fieldData.toLowerCase().includes(filterText.trim().toLowerCase())\n        );\n      })\n    );\n}\n"],"names":["AutoSizer","height","width","onResize","_this","props","_parentNode","offsetHeight","offsetWidth","style","window","getComputedStyle","paddingLeft","parseInt","paddingRight","paddingTop","paddingBottom","state","setState","autoSizer","_autoSizer","componentDidMount","_window","resetTriggers","scrollListener","this","parentNode","ownerDocument","defaultView","HTMLElement","_detectElementResize","global","element","triggers","__resizeTriggers__","expand","firstElementChild","contract","lastElementChild","expandChild","scrollLeft","scrollWidth","scrollTop","scrollHeight","e","target","className","indexOf","__resizeRAF__","cancelAnimationFrame","clearTimeout","requestAnimationFrame","fn","setTimeout","__resizeLast__","__resizeListeners__","forEach","call","addResizeListener","doc","elementStyle","position","getElementById","css","head","getElementsByTagName","createElement","id","type","setAttribute","styleSheet","cssText","appendChild","createTextNode","createStyles","innerHTML","addEventListener","push","removeResizeListener","splice","length","removeEventListener","__animationListener__","removeChild","_onResize","componentWillUnmount","render","React","innerElementType","ref","_setRef","overflow","outerStyle","useMemo","useReducer","cache","header","row","table","reducer","entity","dimensions","JSON","stringify","Measurer","measure","debounceWait","debounced","debounce","leading","dispatch","objectProps","otherProps","areTablePropsEqual","prev","next","every","propName","TableContext","createContext","columns","data","Cell","Row","Table","Body","classNamePrefix","tableClassName","rowClassName","rowWidthOffset","setSize","variableSizeRows","RowCells","datum","index","map","column","i","key","Component","flexGrow","display","boxSizing","RowRenderer","useContext","rowClassNameStr","setSizeRef","useRef","setSizeCb","useCallback","el","document","querySelector","getBoundingClientRect","current","useEffect","MemoRowRenderer","memo","areEqual","HeaderRowRenderer","Header","HeaderRow","DefaultHeaderCell","HeaderCell","children","rowRef","color","firstChild","backgroundColor","title","TableBodyRenderer","WindowTable","rowHeight","overscanCount","disableHeader","tableOuterRef","tableOuterElementType","rest","localRef","useState","headerHeight","setHeaderHeight","measurerRowRef","columnWidthsSum","reduce","sum","tableWidth","bodyHeight","effectiveWidth","Math","max","clientWidth","sizeMap","setSizeMap","tblCtx","resetAfterIndex","maxHeight","minHeight","Provider","value","marginBottom","VariableSizeList","itemCount","itemSize","outerRef","outerElementType","getTHead","headerClassName","headerCellInnerElementType","tableCellInnerElementType","fields","originalData","filterText","filter","some","field","fieldData","String","toLowerCase","includes","trim","initialState","wait","immediateState","setImmediateState","debouncedState","setDebouncedState","cancel","filterFn"],"mappings":"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"}