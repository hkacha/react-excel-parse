/**
 * A hook giving a combination of immediate and debounced state
 * @param initialState
 * @param wait
 */
export declare function useDebouncedState(initialState: any, wait?: number): [any, any, (state: any) => void];
declare type UseFilter = (filterFn: (data: Array<Object>, filterText: string) => Array<Object>, data: Array<Object>, filterText: string) => Array<Object>;
/**
 * A hook for fast data filtering
 * @param filterFn
 * @param data
 * @param filterText
 */
export declare const useFilter: UseFilter;
/**
 * A simple utility for creating functions for trivial data filtering
 * @param fields
 */
export declare function createFilter(fields: string[]): (originalData: any, filterText: string) => any;
export {};
